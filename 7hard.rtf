{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red236\green244\blue251;\red12\green14\blue18;}
{\*\expandedcolortbl;;\cssrgb\c94118\c96471\c98824;\cssrgb\c5098\c6667\c9020;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import java.sql.*;\
import java.util.Scanner;\
\
class Student \{\
    private int studentID;\
    private String name;\
    private String department;\
    private double marks;\
\
    public Student(int studentID, String name, String department, double marks) \{\
        this.studentID = studentID;\
        this.name = name;\
        this.department = department;\
        this.marks = marks;\
    \}\
\
    public int getStudentID() \{ return studentID; \}\
    public String getName() \{ return name; \}\
    public String getDepartment() \{ return department; \}\
    public double getMarks() \{ return marks; \}\
\}\
\
class StudentController \{\
    static String url = "jdbc:mysql://localhost:3306/vivek_db";\
    static String user = "vivek_user";\
    static String password = "vivek_password";\
\
    public static void addStudent(Student student) \{\
        String query = "INSERT INTO Student (StudentID, Name, Department, Marks) VALUES (?, ?, ?, ?)";\
        try (Connection con = DriverManager.getConnection(url, user, password);\
             PreparedStatement stmt = con.prepareStatement(query)) \{\
            con.setAutoCommit(false);\
            stmt.setInt(1, student.getStudentID());\
            stmt.setString(2, student.getName());\
            stmt.setString(3, student.getDepartment());\
            stmt.setDouble(4, student.getMarks());\
            stmt.executeUpdate();\
            con.commit();\
            System.out.println("Student added successfully.");\
        \} catch (SQLException e) \{\
            System.out.println("Error adding student.");\
            e.printStackTrace();\
        \}\
    \}\
\
    public static void viewStudents() \{\
        String query = "SELECT * FROM Student";\
        try (Connection con = DriverManager.getConnection(url, user, password);\
             Statement stmt = con.createStatement();\
             ResultSet rs = stmt.executeQuery(query)) \{\
            System.out.println("StudentID | Name | Department | Marks");\
            while (rs.next()) \{\
                System.out.println(rs.getInt("StudentID") + " | " +\
                                   rs.getString("Name") + " | " +\
                                   rs.getString("Department") + " | " +\
                                   rs.getDouble("Marks"));\
            \}\
        \} catch (SQLException e) \{\
            System.out.println("Error retrieving students.");\
            e.printStackTrace();\
        \}\
    \}\
\
    public static void updateStudent(int studentID, String name, String department, double marks) \{\
        String query = "UPDATE Student SET Name = ?, Department = ?, Marks = ? WHERE StudentID = ?";\
        try (Connection con = DriverManager.getConnection(url, user, password);\
             PreparedStatement stmt = con.prepareStatement(query)) \{\
            con.setAutoCommit(false);\
            stmt.setString(1, name);\
            stmt.setString(2, department);\
            stmt.setDouble(3, marks);\
            stmt.setInt(4, studentID);\
            stmt.executeUpdate();\
            con.commit();\
            System.out.println("Student updated successfully.");\
        \} catch (SQLException e) \{\
            System.out.println("Error updating student.");\
            e.printStackTrace();\
        \}\
    \}\
\
    public static void deleteStudent(int studentID) \{\
        String query = "DELETE FROM Student WHERE StudentID = ?";\
        try (Connection con = DriverManager.getConnection(url, user, password);\
             PreparedStatement stmt = con.prepareStatement(query)) \{\
            con.setAutoCommit(false);\
            stmt.setInt(1, studentID);\
            stmt.executeUpdate();\
            con.commit();\
            System.out.println("Student deleted successfully.");\
        \} catch (SQLException e) \{\
            System.out.println("Error deleting student.");\
            e.printStackTrace();\
        \}\
    \}\
\}\
\
public class StudentView \{\
    public static void main(String[] args) \{\
        Scanner scanner = new Scanner(System.in);\
        while (true) \{\
            System.out.println("\\nMenu:");\
            System.out.println("1. Add Student");\
            System.out.println("2. View Students");\
            System.out.println("3. Update Student");\
            System.out.println("4. Delete Student");\
            System.out.println("5. Exit");\
            System.out.print("Choose an option: ");\
            int choice = scanner.nextInt();\
            scanner.nextLine();\
\
            switch (choice) \{\
                case 1:\
                    System.out.print("Enter Student ID: ");\
                    int id = scanner.nextInt();\
                    scanner.nextLine();\
                    System.out.print("Enter Name: ");\
                    String name = scanner.nextLine();\
                    System.out.print("Enter Department: ");\
                    String dept = scanner.nextLine();\
                    System.out.print("Enter Marks: ");\
                    double marks = scanner.nextDouble();\
                    StudentController.addStudent(new Student(id, name, dept, marks));\
                    break;\
                case 2:\
                    StudentController.viewStudents();\
                    break;\
                case 3:\
                    System.out.print("Enter Student ID to update: ");\
                    int updateID = scanner.nextInt();\
                    scanner.nextLine();\
                    System.out.print("Enter new Name: ");\
                    String updateName = scanner.nextLine();\
                    System.out.print("Enter new Department: ");\
                    String updateDept = scanner.nextLine();\
                    System.out.print("Enter new Marks: ");\
                    double updateMarks = scanner.nextDouble();\
                    StudentController.updateStudent(updateID, updateName, updateDept, updateMarks);\
                    break;\
                case 4:\
                    System.out.print("Enter Student ID to delete: ");\
                    int deleteID = scanner.nextInt();\
                    StudentController.deleteStudent(deleteID);\
                    break;\
                case 5:\
                    System.out.println("Exiting...");\
                    scanner.close();\
                    return;\
                default:\
                    System.out.println("Invalid option. Try again.");\
            \}\
        \}\
    \}\
\}\
}